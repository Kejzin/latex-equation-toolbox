{"version":3,"sources":["webpack:///./src/components/VisualInput/index.tsx"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactRedux","_reactMathquill","_styledComponents","_input","addStyles","MathquillStyles","createGlobalStyle","_templateObject","props","darkTheme","Container","default","div","withConfig","displayName","componentId","InputField","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","mathElement","mathField","previousLatex","updateLatex","bind","_assertThisInitialized","Component","stateLatex","store","getState","input","latex","_this2","createElement","onClick","ref","x","element","onChange","trim","changeLatex","mathquillDidMount","instance","connect","state","settings","actions"],"mappings":"4JAAA,IAAAA,EAAAC,EAAAC,EAAA,IACAC,EAAAD,EAAA,KAEAE,EAAAH,EAAAC,EAAA,MACAG,EAAAJ,EAAAC,EAAA,MA2BAI,EAAAJ,EAAA,u6CAzBA,EAAAE,EAAAG,aAMA,IAAMC,GAAe,EAAGH,EAAAI,mBAAHC,IAUD,SAAAC,GAAK,OAAKA,EAAMC,UAAY,QAAU,UAIpDC,EAAYR,EAAAS,QAAOC,IAAVC,YAAAC,YAAA,yBAAAC,YAAA,YAAGb,EAAH,4BAeTc,cAMJ,SAAAA,EAAYR,GAAK,IAAAS,EAAA,mGAAAC,CAAAC,KAAAH,IACfC,uEAAAG,CAAAD,KAAAE,EAAAL,GAAAM,KAAAH,KAAMX,KACDe,YAAc,KACnBN,EAAKO,UAAY,KACjBP,EAAKQ,cAAgB,KAErBR,EAAKS,YAAYC,KAAjBC,IAAAX,KANeA,8OANMpB,EAAMgC,8IA8B3B,IAAMC,EAAaX,KAAKX,MAAMuB,MAAMC,WAAWC,MAAMC,MACjDJ,GAAcX,KAAKK,UAAUU,SAC/Bf,KAAKK,UAAUU,MAAMJ,oFAQnB,IAAAK,EAAAhB,KACJ,OACEtB,EAAAuC,cAAC1B,GACC2B,QAAS,WACPF,EAAKT,gBAGP7B,EAAAuC,cAAC/B,GAAgBI,UAAWU,KAAKX,MAAMC,YACvCZ,EAAAuC,cAACnC,EAAAU,SACC2B,IAAK,SAAAC,GACqB,MAApBJ,EAAKZ,cACPY,EAAKZ,YAAcgB,EAAEC,UAGzBN,MAAOf,KAAKX,MAAM0B,MAClBO,SAAU,SAAAP,GACJA,EAAMQ,SAAWP,EAAK3B,MAAM0B,MAAMQ,QACpCP,EAAK3B,MAAMmC,YAAYT,IAG3BU,kBAAmB,SAAAC,GACjBV,EAAKX,UAAYqB,kBAQd,EAAA7C,EAAA8C,SACb,SAAAC,GAAK,OACHb,MAAOa,EAAMd,MAAMC,MACnBzB,UAAWsC,EAAMC,SAASvC,YAE5BN,EAAA8C,QALa,CAMbjC","file":"comp-visual-input.bundle.js","sourcesContent":["import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport MathQuill, { addStyles as addMathquillStyles } from 'react-mathquill'\nimport styled, { createGlobalStyle } from 'styled-components'\n\naddMathquillStyles()\n\ninterface MathQuillStylesProps {\n  darkTheme: boolean\n}\n\nconst MathquillStyles = createGlobalStyle<MathQuillStylesProps>`\n  .mq-editable-field {\n    width: calc(100% - 40px);\n    height: calc(100% - 40px);\n    font-size: 26px !important;\n    padding: 20px;\n    border: none !important;\n  }\n\n  .mq-cursor {\n    border-color: ${props => (props.darkTheme ? 'white' : 'black')} !important;\n  }\n`\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\nimport { actions } from '../../reducers/input'\nimport { Store } from 'redux'\n\ninterface Props {\n  latex: string\n  darkTheme: boolean\n  store: Store\n  changeLatex(latex: string)\n}\n\nclass InputField extends React.Component<Props> {\n  mathElement: HTMLElement | null\n  mathField: any\n  previousLatex: string\n  unsubscribe: Function\n\n  constructor(props) {\n    super(props)\n    this.mathElement = null\n    this.mathField = null\n    this.previousLatex = null\n\n    this.updateLatex.bind(this)\n  }\n\n  componentDidMount() {\n    // Could be used later to mark that the input hasn't been updated\n    // this.unsubscribe = this.props.store.subscribe(() => {\n    //   const state = this.props.store.getState()\n    //   const newLatex = state.input.latex\n    //   if (newLatex != this.previousLatex) {\n    //     this.previousLatex = newLatex\n    //     if (this.mathElement.getAttribute('class').includes('mq-focused')) {\n    //       this.updateLatex()\n    //     }\n    //   }\n    // })\n  }\n\n  updateLatex() {\n    const stateLatex = this.props.store.getState().input.latex\n    if (stateLatex != this.mathField.latex()) {\n      this.mathField.latex(stateLatex)\n    }\n  }\n\n  componentWillUnmount() {\n    // this.unsubscribe()\n  }\n\n  render() {\n    return (\n      <Container\n        onClick={() => {\n          this.updateLatex()\n        }}\n      >\n        <MathquillStyles darkTheme={this.props.darkTheme} />\n        <MathQuill\n          ref={x => {\n            if (this.mathElement == null) {\n              this.mathElement = x.element\n            }\n          }}\n          latex={this.props.latex} // Initial latex value for the input field\n          onChange={latex => {\n            if (latex.trim() !== this.props.latex.trim()) {\n              this.props.changeLatex(latex)\n            }\n          }}\n          mathquillDidMount={instance => {\n            this.mathField = instance\n          }}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    latex: state.input.latex,\n    darkTheme: state.settings.darkTheme,\n  }),\n  actions\n)(InputField)\n"],"sourceRoot":""}