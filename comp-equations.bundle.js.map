{"version":3,"sources":["webpack:///./src/components/Equations/index.tsx","webpack:///./src/components/styles.ts","webpack:///./src/components/ImageExport/mathjax-setup.js","webpack:///./src/components/Preview/MathField.tsx","webpack:///./src/components/Preview/CopyButton.tsx"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactRedux","_calculations","_MathField","_interopRequireDefault","Styles","_calculations2","Equations","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","selectVariable","bind","_assertThisInitialized","Component","variable","solveVariable","_this2","variableButtons","Object","keys","variables","map","v","style","backgroundColor","createElement","key","onClick","x","Container","Header","default","latex","connect","store","assign","calculations","input","actions","_styledComponents","MathJaxStyle","createGlobalStyle","_templateObject","MathFieldDiv","div","withConfig","displayName","componentId","ImageWrapper","CenterDiv","h2","mj2img","r","__webpack_exports__","window","MathJax","AuthorInit","console","log","loadListeners","jax","extensions","showMathMenu","showProcessingMessages","messageStyle","SVG","useGlobalCache","TeX","Hub","Register","StartupHook","callback","concat","wrapper","document","innerHTML","output","svg","img","Queue","mjOut","getElementsByTagName","setAttribute","widthStr","getAttribute","heightStr","width","substr","length","height","outerHTML","image","Image","svgData","btoa","unescape","encodeURIComponent","src","onload","canvas","getContext","drawImage","toDataURL","_i","listener","d","script","type","async","appendChild","Promise","resolve","undefined","push","MathStyle","_CopyButton","_mathjaxSetup","AlgebraLatex","MathField","oldLatex","newestPromise","state","self","then","setState","localPromise","setTimeout","res","updateMath","delayedUpdateMath","mathString","parseLatex","toMath","e","value","name","_reactClipboard","data-clipboard-text"],"mappings":"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","file":"comp-equations.bundle.js","sourcesContent":["import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { solveVariable } from '../calculations'\nimport MathField from '../Preview/MathField'\nimport * as Styles from '../styles'\n\nimport { actions, CalculationState } from '../../reducers/calculations'\n\ninterface PropsType extends CalculationState {\n  latex: string\n  solveVariable(variable: string): void\n  changeVariables(variables: string[]): void\n}\n\nclass Equations extends React.Component<PropsType, any> {\n  constructor(props) {\n    super(props)\n    this.selectVariable = this.selectVariable.bind(this)\n  }\n\n  selectVariable(variable: string) {\n    this.props.solveVariable(variable)\n  }\n\n  render() {\n    const variableButtons = Object.keys(this.props.variables).map(v => {\n      let style = null\n      if (v === this.props.variable) {\n        style = {\n          backgroundColor: 'red',\n        }\n      }\n      return (\n        <button\n          key={v}\n          style={style}\n          onClick={x => {\n            this.selectVariable(v)\n          }}\n        >\n          {v}\n        </button>\n      )\n    })\n\n    return (\n      <Styles.Container>\n        <Styles.Header>Equations</Styles.Header>\n        <MathField\n          latex={solveVariable(this.props.latex, this.props.variable)}\n        />\n        Solve for variable\n        <button\n          onClick={x => {\n            this.selectVariable(null)\n          }}\n        >\n          None\n        </button>\n        {variableButtons}\n      </Styles.Container>\n    )\n  }\n}\n\nexport default connect(\n  store => ({\n    ...store.calculations,\n    latex: store.input.latex,\n  }),\n  actions\n)(Equations)\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const MathJaxStyle = createGlobalStyle`\n  .MathJax_Preview {\n    display: none !important;\n  }\n\n  .MJXc-display {\n    margin: 4px 0 !important;\n    user-select: none;\n    font-size: 24px !important;\n  }\n`\n\nexport const MathFieldDiv = styled.div`\n  min-height: 90px;\n`\n\nexport const ImageWrapper = styled.div`\n  background-color: white;\n  display: table;\n  margin: auto;\n  padding: 8px;\n`\n\nexport const CenterDiv = styled.div`\n  text-align: center;\n`\n\nexport const Container = styled.div`\n  height: 100%;\n  overflow-y: scroll;\n  padding: 8px 12px 16px;\n`\n\nexport const Header = styled.h2`\n  padding: 0;\n  margin: 0;\n`\n","let mj2img\n\nwindow.MathJax = {\n  AuthorInit: function() {\n    console.log('Initialization')\n  },\n}\n\nlet loadListeners = []\n\n// Thanks to Peter Krautzberger for his codepen https://codepen.io/pkra/details/PZLyQO\nwindow.MathJax = {\n  jax: ['input/TeX', 'output/SVG'],\n  extensions: ['tex2jax.js', 'MathMenu.js', 'MathZoom.js'],\n  showMathMenu: false,\n  showProcessingMessages: false,\n  messageStyle: 'none',\n  SVG: {\n    useGlobalCache: false,\n  },\n  TeX: {\n    extensions: ['AMSmath.js', 'AMSsymbols.js', 'autoload-all.js'],\n  },\n  AuthorInit: function() {\n    console.log('AuthorInit called')\n    MathJax.Hub.Register.StartupHook('End', function() {\n      mj2img = function(latex, callback) {\n        let texstring = `\\\\[${latex}\\\\]`\n\n        var input = texstring\n\n        var wrapper = document.createElement('div')\n\n        wrapper.innerHTML = input\n\n        var output = { svg: '', img: '' }\n        MathJax.Hub.Queue(['Typeset', MathJax.Hub, wrapper])\n        MathJax.Hub.Queue(function() {\n          var mjOut = wrapper.getElementsByTagName('svg')[0]\n          mjOut.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n\n          // Example \"22.676ex\"\n          let widthStr = mjOut.getAttribute('width')\n          let heightStr = mjOut.getAttribute('height')\n\n          let width = widthStr.substr(0, widthStr.length - 2)\n          let height = heightStr.substr(0, heightStr.length - 2)\n\n          let scale = 1\n\n          mjOut.setAttribute('width', `${width * scale}ex`)\n          mjOut.setAttribute('height', `${height * scale}ex`)\n\n          // thanks, https://spin.atomicobject.com/2014/01/21/convert-svg-to-png/\n          output.svg = mjOut.outerHTML\n          var image = new Image()\n          let svgData =\n            'data:image/svg+xml;base64,' +\n            window.btoa(unescape(encodeURIComponent(output.svg)))\n          output.svgData = svgData\n          image.src = svgData\n          image.onload = function() {\n            var canvas = document.createElement('canvas')\n            canvas.width = image.width\n            canvas.height = image.height\n            var context = canvas.getContext('2d')\n            context.drawImage(image, 0, 0)\n            output.img = canvas.toDataURL('image/png')\n            callback(output)\n          }\n        })\n      }\n\n      for (let listener of loadListeners) {\n        listener(mj2img)\n      }\n\n      loadListeners = []\n\n      // mj2img(\"\\\\[e=\\\\frac{mc^2}{2}\\\\]\", function (output) {\n      //   console.log('here', output)\n      //   //document.getElementById(\"target\").innerHTML = output.svg;\n      // });\n    })\n  },\n}\n\n;(function(d, script) {\n  script = d.createElement('script')\n  script.type = 'text/javascript'\n  script.async = true\n  script.onload = function() {\n    // remote script has loaded\n  }\n  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js'\n  d.getElementsByTagName('head')[0].appendChild(script)\n})(document)\n\n// export default () => {\n//   return mj2img\n// }\n\nexport default () => {\n  return new Promise(resolve => {\n    if (mj2img === undefined) {\n      loadListeners.push(resolve)\n    } else {\n      resolve(mj2img)\n    }\n  })\n}\n","import * as React from 'react'\n//import { Context, Node } from 'react-mathjax'\nimport * as MathStyle from '../styles'\nimport CopyButton from './CopyButton'\nconst AlgebraLatex = require('algebra-latex')\n\n// import style from './style.sass'\nimport loadMj2img from '../ImageExport/mathjax-setup'\n\ninterface Props {\n  latex: string\n}\n\ninterface State {\n  svgData: string\n}\n\nexport default class MathField extends React.Component<Props, State> {\n  oldLatex = ''\n  newestPromise = undefined\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      svgData: '',\n    }\n  }\n\n  updateMath() {\n    let self = this\n    loadMj2img().then(mj2img => {\n      mj2img(this.props.latex, function(output) {\n        self.setState({\n          svgData: output.svgData,\n        })\n      })\n    })\n  }\n\n  delayedUpdateMath() {\n    let localPromise = new Promise(resolve => {\n      console.log('Waiting a sec to update')\n      setTimeout(resolve, 400)\n    })\n    this.newestPromise = localPromise\n\n    let self = this\n\n    localPromise.then(res => {\n      if (self.newestPromise === localPromise) {\n        self.updateMath()\n      } else {\n        console.log('A newer promise was found')\n      }\n    })\n  }\n\n  render() {\n    let self = this\n    if (this.props.latex !== this.oldLatex) {\n      this.oldLatex = this.props.latex\n\n      this.delayedUpdateMath()\n    }\n\n    let mathString = null\n    if (this.props.latex) {\n      try {\n        mathString = new AlgebraLatex().parseLatex(this.props.latex).toMath()\n      } catch (e) {}\n    }\n\n    return (\n      <MathStyle.MathFieldDiv>\n        <MathStyle.MathJaxStyle />\n        <MathStyle.ImageWrapper>\n          {<img src={this.state.svgData} />}\n        </MathStyle.ImageWrapper>\n        <MathStyle.CenterDiv>\n          <CopyButton value={this.props.latex} name=\"Copy as latex\" />\n          <CopyButton value={mathString} name=\"Copy as text\" />\n        </MathStyle.CenterDiv>\n      </MathStyle.MathFieldDiv>\n    )\n  }\n}\n","import * as React from 'react'\nimport Clipboard from 'react-clipboard.js'\n\ninterface CopyButtonProps {\n  value: string\n  name: string\n}\n\nconst CopyButton = function(props: CopyButtonProps) {\n  return <Clipboard data-clipboard-text={props.value}>{props.name}</Clipboard>\n}\n\nexport default CopyButton\n"],"sourceRoot":""}