{"version":3,"sources":["webpack:///./src/components/RegularInput/index.tsx"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactRedux","_reactCodemirror","_styledComponents","_input","_algebraLatex","_interopRequireDefault","CodeMirrorGlobalStyles","createGlobalStyle","_templateObject","Container","default","div","withConfig","displayName","componentId","CodeMirrorStyled","Controlled","RegularInput","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","onInputChange","bind","_assertThisInitialized","codeMirrorElm","editor","oldLatex","latex","state","mathString","calculateMathString","Component","data","value","console","log","setState","updateLatex","parseLatex","toMath","math","newLatex","parseMath","toLatex","changeLatex","e","newMath","_this2","themeName","darkTheme","updateMath","createElement","options","theme","lineWrapping","ref","el","onBeforeChange","onChange","editorDidMount","x","connect","input","settings","actions"],"mappings":"4JAAA,IAAAA,EAAAC,EAAAC,EAAA,IACAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAAJ,EAAAC,EAAA,MACAI,EAAAJ,EAAA,KACAK,mDAAAC,CAAAN,EAAA,kvCAEAA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KAER,IAAMO,GAAsB,EAAGJ,EAAAK,mBAAHC,KAMtBC,EAAYP,EAAAQ,QAAOC,IAAVC,YAAAC,YAAA,0BAAAC,YAAA,eAAGZ,EAAH,iBAITa,GAAmB,EAAAb,EAAAQ,SAAOT,EAAAe,YAAVJ,YAAAC,YAAA,iCAAAC,YAAA,eAAG,EAAH,mDAehBG,cAKJ,SAAAA,EAAYC,GAAK,IAAAC,EAAA,mGAAAC,CAAAC,KAAAJ,IACfE,uEAAAG,CAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,KAEDO,cAAgBN,EAAKM,cAAcC,KAAnBC,IAAAR,KACrBA,EAAKS,cAAgB,KACrBT,EAAKU,OAAS,KACdV,EAAKW,SAAWZ,EAAMa,MAEtBZ,EAAKa,OACHC,WAAYd,EAAKe,oBAAoBhB,EAAMa,QAT9BZ,8OALQtB,EAAMsC,iGAkBjBN,EAAQO,EAAMC,GAE1BC,QAAQC,IAAI,wBAAyBF,GAErChB,KAAKmB,UACHP,WAAYI,IAGdhB,KAAKoB,YAAYJ,+CAGCN,GAClB,OAAO,IAAI3B,EAAAM,SAAegC,WAAWX,GAAOY,6CAGlCC,GACVvB,KAAKS,SAAWT,KAAKH,MAAMa,MAC3B,IACE,IAAMc,GAAW,IAAIzC,EAAAM,SAAeoC,UAAUF,GAAMG,UAEpD1B,KAAKH,MAAM8B,YAAYH,GACvB,MAAOI,GACPX,QAAQC,IAAI,4BAA6BK,uCAIlCb,GACTV,KAAKS,SAAWT,KAAKH,MAAMa,MAC3B,IACE,IAAMmB,GAAU,IAAI9C,EAAAM,SAAegC,WAAWX,GAAOY,SAErDtB,KAAKmB,UACHP,WAAYiB,IAEd,MAAOD,GACPX,QAAQC,IAAI,2BAA4BR,qCAItC,IAAAoB,EAAA9B,KACE+B,EAAY/B,KAAKH,MAAMmC,UAAY,UAAY,eAMrD,OAJIhC,KAAKS,UAAYT,KAAKH,MAAMa,OAC9BV,KAAKiC,WAAWjC,KAAKH,MAAMa,OAI3BlC,EAAA0D,cAAC9C,EAAS,KACRZ,EAAA0D,cAACjD,EAAsB,MACvBT,EAAA0D,cAACxC,GACCyC,SACEC,MAAOL,EACPM,cAAc,GAEhBC,IAAK,SAAAC,GACHT,EAAKvB,cAAgBgC,GAEvBvB,MAAOhB,KAAKW,MAAMC,WAClB4B,eAAgBxC,KAAKI,cACrBqC,SAAU,aACVC,eAAgB,SAAAC,GACdb,EAAKtB,OAASmC,kBAQX,EAAAhE,EAAAiE,SACb,SAAAjC,GAAK,OACHD,MAAOC,EAAMkC,MAAMnC,MACnBsB,UAAWrB,EAAMmC,SAASd,YAE5BlD,EAAAiE,QALa,CAMbnD","file":"comp-regular-input.bundle.js","sourcesContent":["import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Controlled as CodeMirror } from 'react-codemirror2'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport { actions } from '../../reducers/input'\nimport AlgebraLatex from 'algebra-latex'\n\nrequire('codemirror/lib/codemirror.css')\nrequire('codemirror/mode/stex/stex')\nrequire('codemirror/theme/monokai.css')\nrequire('codemirror/theme/base16-light.css')\n\nconst CodeMirrorGlobalStyles = createGlobalStyle`\n  .CodeMirror {\n    height: 100% !important;\n  }\n`\n\nconst Container = styled.div`\n  height: 100%;\n`\n\nconst CodeMirrorStyled = styled(CodeMirror)`\n  height: 100vh;\n  background-color: #222 !important;\n`\n\ninterface PropsType {\n  latex: string\n  darkTheme: boolean\n  changeLatex(value: string): void\n}\n\ninterface State {\n  mathString: string\n}\n\nclass RegularInput extends React.Component<PropsType, State> {\n  codeMirrorElm: any\n  editor: CodeMirror.Editor\n  oldLatex: string\n\n  constructor(props) {\n    super(props)\n\n    this.onInputChange = this.onInputChange.bind(this)\n    this.codeMirrorElm = null\n    this.editor = null\n    this.oldLatex = props.latex\n\n    this.state = {\n      mathString: this.calculateMathString(props.latex),\n    }\n  }\n\n  onInputChange(editor, data, value) {\n    // this.props.changeLatex(value)\n    console.log('Changed regular input', value)\n\n    this.setState({\n      mathString: value,\n    })\n\n    this.updateLatex(value)\n  }\n\n  calculateMathString(latex: string): string {\n    return new AlgebraLatex().parseLatex(latex).toMath()\n  }\n\n  updateLatex(math: string) {\n    this.oldLatex = this.props.latex\n    try {\n      const newLatex = new AlgebraLatex().parseMath(math).toLatex()\n\n      this.props.changeLatex(newLatex)\n    } catch (e) {\n      console.log('Could not parse to latex:', math)\n    }\n  }\n\n  updateMath(latex: string) {\n    this.oldLatex = this.props.latex\n    try {\n      const newMath = new AlgebraLatex().parseLatex(latex).toMath()\n\n      this.setState({\n        mathString: newMath,\n      })\n    } catch (e) {\n      console.log('Could not parse to math:', latex)\n    }\n  }\n\n  render() {\n    const themeName = this.props.darkTheme ? 'monokai' : 'base16-light'\n\n    if (this.oldLatex != this.props.latex) {\n      this.updateMath(this.props.latex)\n    }\n\n    return (\n      <Container>\n        <CodeMirrorGlobalStyles />\n        <CodeMirrorStyled\n          options={{\n            theme: themeName,\n            lineWrapping: true,\n          }}\n          ref={el => {\n            this.codeMirrorElm = el\n          }}\n          value={this.state.mathString}\n          onBeforeChange={this.onInputChange}\n          onChange={() => {}}\n          editorDidMount={x => {\n            this.editor = x\n          }}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    latex: state.input.latex,\n    darkTheme: state.settings.darkTheme,\n  }),\n  actions\n)(RegularInput)\n"],"sourceRoot":""}