{"version":3,"sources":["webpack:///./src/components/Preview/index.tsx","webpack:///./src/components/styles.ts","webpack:///./src/components/ImageExport/mathjax-setup.js","webpack:///./src/components/Preview/MathField.tsx","webpack:///./src/components/Preview/CopyButton.tsx","webpack:///./src/components/Preview/Variables.tsx"],"names":["React","_interopRequireWildcard","__webpack_require__","_reactRedux","PropTypes","MathStyle","_MathField","_interopRequireDefault","_Variables","Preview","props","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","Component","mathEl","createElement","latex","default","Container","Header","store","contextTypes","object","connect","input","variables","calculations","_styledComponents","MathJaxStyle","createGlobalStyle","_templateObject","MathFieldDiv","div","withConfig","displayName","componentId","ImageWrapper","CenterDiv","h2","mj2img","r","__webpack_exports__","window","MathJax","AuthorInit","console","log","loadListeners","jax","extensions","showMathMenu","showProcessingMessages","messageStyle","SVG","useGlobalCache","TeX","Hub","Register","StartupHook","callback","concat","wrapper","document","innerHTML","output","svg","img","Queue","mjOut","getElementsByTagName","setAttribute","widthStr","getAttribute","heightStr","width","substr","length","Number","height","outerHTML","image","Image","svgData","btoa","unescape","encodeURIComponent","src","onload","canvas","getContext","drawImage","toDataURL","_i","listener","d","script","type","async","appendChild","Promise","resolve","undefined","push","_CopyButton","_","_mathjaxSetup","AlgebraLatex","MathField","_this","oldLatex","newestPromise","state","_this2","self","then","setState","debounce","updateMath","mathString","parseLatex","toMath","e","value","name","_reactClipboard","data-clipboard-text","_calculations","_calculations2","Styles","Variables","previousLatex","simplifiedEl","updateSimplify","solution","solutionEl","includes","solveVariables","asciiMath","message","event","variable","isNaN","target","setVariable","inputs","Object","keys","map","v","key","onChange","x","inputChanged","bind","inputSection","assign","actions"],"mappings":"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","file":"comp-preview.bundle.js","sourcesContent":["import * as React from 'react'\nimport { connect } from 'react-redux'\nimport * as PropTypes from 'prop-types'\nimport * as MathStyle from '../styles'\n\nimport MathField from './MathField'\nimport Variables from './Variables'\n\ninterface Props {\n  latex: string\n  store: any\n}\n\nclass Preview extends React.Component<Props> {\n  static contextTypes = {\n    store: PropTypes.object,\n  }\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    let mathEl = <div>Empty math</div>\n\n    if (this.props.latex) {\n      mathEl = <MathField latex={this.props.latex} />\n    }\n\n    return (\n      <MathStyle.Container>\n        <div>\n          <MathStyle.Header>Preview rendered math</MathStyle.Header> {mathEl}\n          <Variables store={this.props.store} />\n        </div>\n      </MathStyle.Container>\n    )\n  }\n}\n\nexport default connect(store => ({\n  latex: store.input.latex,\n  variables: store.calculations.variables,\n}))(Preview)\n","import styled, { createGlobalStyle } from 'styled-components'\n\nexport const MathJaxStyle = createGlobalStyle`\n  .MathJax_Preview {\n    display: none !important;\n  }\n\n  .MJXc-display {\n    margin: 4px 0 !important;\n    user-select: none;\n    font-size: 24px !important;\n  }\n`\n\nexport const MathFieldDiv = styled.div`\n  min-height: 90px;\n`\n\nexport const ImageWrapper = styled.div`\n  background-color: white;\n  display: table;\n  margin: auto;\n  padding: 8px;\n`\n\nexport const CenterDiv = styled.div`\n  text-align: center;\n`\n\nexport const Container = styled.div`\n  height: 100%;\n  overflow-y: scroll;\n  padding: 8px 12px 16px;\n`\n\nexport const Header = styled.h2`\n  padding: 0;\n  margin: 0;\n`\n","let mj2img\n\nwindow.MathJax = {\n  AuthorInit: function() {\n    console.log('Initialization')\n  },\n}\n\nlet loadListeners = []\n\n// Thanks to Peter Krautzberger for his codepen https://codepen.io/pkra/details/PZLyQO\nwindow.MathJax = {\n  jax: ['input/TeX', 'output/SVG'],\n  extensions: ['tex2jax.js', 'MathMenu.js', 'MathZoom.js'],\n  showMathMenu: false,\n  showProcessingMessages: false,\n  messageStyle: 'none',\n  SVG: {\n    useGlobalCache: false,\n  },\n  TeX: {\n    extensions: ['AMSmath.js', 'AMSsymbols.js', 'autoload-all.js'],\n  },\n  AuthorInit: function() {\n    console.log('AuthorInit called')\n    MathJax.Hub.Register.StartupHook('End', function() {\n      mj2img = function(latex, callback) {\n        let texstring = `\\\\[${latex}\\\\]`\n\n        var input = texstring\n\n        var wrapper = document.createElement('div')\n\n        wrapper.innerHTML = input\n\n        var output = { svg: '', img: '' }\n        MathJax.Hub.Queue(['Typeset', MathJax.Hub, wrapper])\n        MathJax.Hub.Queue(function() {\n          var mjOut = wrapper.getElementsByTagName('svg')[0]\n\n          if (typeof mjOut == 'undefined') {\n            return\n          }\n\n          mjOut.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n\n          // Example \"22.676ex\"\n          let widthStr = mjOut.getAttribute('width')\n          let heightStr = mjOut.getAttribute('height')\n\n          let scale = 1.4\n\n          if (widthStr) {\n            let width = widthStr.substr(0, widthStr.length - 2)\n            width = Number(width)\n            mjOut.setAttribute('width', `${width * scale}ex`)\n          }\n\n          if (heightStr) {\n            let height = heightStr.substr(0, heightStr.length - 2)\n            height = Number(height)\n            mjOut.setAttribute('height', `${height * scale}ex`)\n          }\n\n          // thanks, https://spin.atomicobject.com/2014/01/21/convert-svg-to-png/\n          output.svg = mjOut.outerHTML\n          var image = new Image()\n          let svgData =\n            'data:image/svg+xml;base64,' +\n            window.btoa(unescape(encodeURIComponent(output.svg)))\n          output.svgData = svgData\n          image.src = svgData\n          image.onload = function() {\n            var canvas = document.createElement('canvas')\n            if (image.width > 0 && image.height > 0) {\n              canvas.width = image.width\n              canvas.height = image.height\n              var context = canvas.getContext('2d')\n              context.drawImage(image, 0, 0)\n              output.img = canvas.toDataURL('image/png')\n            }\n            callback(output)\n          }\n        })\n      }\n\n      for (let listener of loadListeners) {\n        listener(mj2img)\n      }\n\n      loadListeners = []\n\n      // mj2img(\"\\\\[e=\\\\frac{mc^2}{2}\\\\]\", function (output) {\n      //   console.log('here', output)\n      //   //document.getElementById(\"target\").innerHTML = output.svg;\n      // });\n    })\n  },\n}\n;(function(d, script) {\n  script = d.createElement('script')\n  script.type = 'text/javascript'\n  script.async = true\n  script.onload = function() {\n    // remote script has loaded\n  }\n  script.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js'\n  d.getElementsByTagName('head')[0].appendChild(script)\n})(document)\n\n// export default () => {\n//   return mj2img\n// }\n\nexport default () => {\n  return new Promise(resolve => {\n    if (mj2img === undefined) {\n      loadListeners.push(resolve)\n    } else {\n      resolve(mj2img)\n    }\n  })\n}\n","import * as React from 'react'\n//import { Context, Node } from 'react-mathjax'\nimport * as MathStyle from '../styles'\nimport CopyButton from './CopyButton'\nconst AlgebraLatex = require('algebra-latex')\nimport * as _ from 'lodash'\n\n// import style from './style.sass'\nimport loadMj2img from '../ImageExport/mathjax-setup'\n\ninterface Props {\n  latex: string\n}\n\ninterface State {\n  svgData: string\n}\n\nexport default class MathField extends React.Component<Props, State> {\n  oldLatex = ''\n  newestPromise = undefined\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      svgData: '',\n    }\n  }\n\n  updateMath() {\n    let self = this\n    loadMj2img().then(mj2img => {\n      mj2img(this.props.latex, function(output) {\n        self.setState({\n          svgData: output.svgData,\n        })\n      })\n    })\n  }\n\n  render() {\n    let self = this\n    if (this.props.latex !== this.oldLatex) {\n      this.oldLatex = this.props.latex\n\n      _.debounce(this.updateMath, 400)\n    }\n\n    let mathString = null\n    if (this.props.latex) {\n      try {\n        mathString = new AlgebraLatex().parseLatex(this.props.latex).toMath()\n      } catch (e) {}\n    }\n\n    return (\n      <MathStyle.MathFieldDiv>\n        <MathStyle.MathJaxStyle />\n        <MathStyle.ImageWrapper>\n          {<img src={this.state.svgData} />}\n        </MathStyle.ImageWrapper>\n        <MathStyle.CenterDiv>\n          <CopyButton value={this.props.latex} name=\"Copy as latex\" />\n          <CopyButton value={mathString} name=\"Copy as text\" />\n        </MathStyle.CenterDiv>\n      </MathStyle.MathFieldDiv>\n    )\n  }\n}\n","import * as React from 'react'\nimport Clipboard from 'react-clipboard.js'\n\ninterface CopyButtonProps {\n  value: string\n  name: string\n}\n\nconst CopyButton = function(props: CopyButtonProps) {\n  return <Clipboard data-clipboard-text={props.value}>{props.name}</Clipboard>\n}\n\nexport default CopyButton\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport * as _ from 'lodash'\n// import AlgebraLatex from 'algebra-latex'\nconst AlgebraLatex = require('algebra-latex')\nimport { actions } from '../../reducers/calculations'\nimport { solveVariables } from '../calculations'\n\n// import style from './style.sass'\nimport * as Styles from '../styles'\n\nimport MathField from './MathField'\n\ninterface Props {\n  latex: string\n  changeVariables(variables: string[])\n  variables: string[]\n  setVariable(name: string, value: number | null)\n}\n\ninterface State {\n  simplifiedEl: React.ReactElement<any>\n}\n\nclass Variables extends React.Component<Props, State> {\n  previousLatex: string\n\n  constructor(props) {\n    super(props)\n\n    this.previousLatex = ''\n    this.state = {\n      simplifiedEl: <div />,\n    }\n\n    this.updateSimplify()\n  }\n\n  updateSimplify() {\n    let solution = null\n    let solutionEl = null\n\n    if (this.props.latex && !this.props.latex.includes('=')) {\n      try {\n        solution = solveVariables(this.props.latex, this.props.variables)\n        solutionEl = <MathField latex={solution} />\n      } catch (e) {\n        try {\n          const asciiMath = new AlgebraLatex(this.props.latex).toMath()\n\n          solutionEl = (\n            <Styles.CenterDiv>\n              Could not simplify math: {e.message}\n              <br />\n              <i>{asciiMath}</i>\n            </Styles.CenterDiv>\n          )\n        } catch (e) {\n          solutionEl = (\n            <Styles.CenterDiv>\n              Could not parse latex: {e.message}\n            </Styles.CenterDiv>\n          )\n        }\n      }\n    } else if (this.props.latex.includes('=')) {\n      solutionEl = (\n        <Styles.CenterDiv>Cannot simplify equations</Styles.CenterDiv>\n      )\n    }\n\n    this.setState({\n      simplifiedEl: solutionEl,\n    })\n  }\n\n  inputChanged(event, variable) {\n    if (!isNaN(Number(event.target.value)) && event.target.value !== '') {\n      this.props.setVariable(variable, Number(event.target.value))\n    } else {\n      this.props.setVariable(variable, null)\n    }\n  }\n\n  render() {\n    const self = this\n    const inputs = Object.keys(this.props.variables).map(v => (\n      <div key={v}>\n        {v}:\n        <input\n          value={this.props.variables[v] || ''}\n          onChange={x => {\n            self.inputChanged(x, v)\n          }}\n        />\n      </div>\n    ))\n\n    if (this.props.latex != this.previousLatex) {\n      _.debounce(this.updateSimplify.bind(this), 400)\n    }\n\n    let inputSection = null\n    if (inputs.length > 0) {\n      inputSection = (\n        <div>\n          <h3>Solve variables:</h3>\n          {inputs}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <Styles.Header>Simplified expression</Styles.Header>{' '}\n        {this.state.simplifiedEl}\n        {inputSection}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  store => ({\n    ...store.calculations,\n    latex: store.input.latex,\n  }),\n  actions\n)(Variables)\n"],"sourceRoot":""}